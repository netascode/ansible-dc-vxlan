# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---

- name: Role Entry Point - [cisco.nac_dc_vxlan.dtc.deploy]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Calling Role - [cisco.nac_dc_vxlan.dtc.deploy]           +"
      - "----------------------------------------------------------------"

- ansible.builtin.debug: msg="Configuring NXOS Devices using NDFC (Direct to Controller)"

- name: Config-Save block
  block:
    - name: Config-Save for Fabric {{ MD_Extended.vxlan.fabric.name }}
      cisco.dcnm.dcnm_rest:
        method: POST
        path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ MD_Extended.vxlan.fabric.name }}/config-save"
      when: >
        (MD_Extended.vxlan.fabric.type == 'ISN' and (MD_Extended.vxlan.topology.switches is defined and MD_Extended.vxlan.topology.switches | length > 0)) or
        MD_Extended.vxlan.fabric.type == 'MSD'
      # TODO: Need to add logic to only save if changes are made

  rescue:
    - name: Config-Save for Fabric {{ MD_Extended.vxlan.fabric.name }} - Failed
      ansible.builtin.debug:
        msg: "{{ config_save.msg.DATA }}"

- name: Deploy for Fabric {{ MD_Extended.vxlan.fabric.name }}
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ MD_Extended.vxlan.fabric.name }}/config-deploy?forceShowRun=false"
  vars:
      ansible_command_timeout: 3000
      ansible_connect_timeout: 3000
  when: >
    (MD_Extended.vxlan.fabric.type == 'ISN' and (MD_Extended.vxlan.topology.switches is defined and MD_Extended.vxlan.topology.switches | length > 0)) or
    MD_Extended.vxlan.fabric.type == 'MSD'
  # TODO: Need to add logic to only deploy if changes are made

- name: Config-Save For Child Fabrics
  cisco.nac_dc_vxlan.dtc.fabrics_config_save:
    fabrics: "{{ child_fabrics_vrfs_networks_changed }}"
  when: >
    MD_Extended.vxlan.fabric.type == 'MSD' and
    (child_fabrics_vrfs_networks_changed is defined and child_fabrics_vrfs_networks_changed | length > 0)

- name: Deploy For Child Fabrics
  cisco.nac_dc_vxlan.dtc.fabrics_deploy:
    fabrics: "{{ child_fabrics_vrfs_networks_changed }}"
  when: >
    MD_Extended.vxlan.fabric.type == 'MSD' and
    (child_fabrics_vrfs_networks_changed is defined and child_fabrics_vrfs_networks_changed | length > 0)
