# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---

- name: Manage Child Fabrics Entry Point
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Manage Fabric {{ MD_Extended.vxlan.fabric.name }}"
      - "----------------------------------------------------------------"

# - name: Get Fabric Association Data from NDFC
#   cisco.dcnm.dcnm_rest:
#     method: GET
#     path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/msd/fabric-associations
#   register: fabric_associations

# - ansible.builtin.debug:
#     var: fabric_associations

- name: Add Child Fabrics To Fabric - {{ MD_Extended.vxlan.fabric.name }}
  cisco.nac_dc_vxlan.dtc.manage_child_fabrics:
    parent_fabric: "{{ MD_Extended.vxlan.fabric.name }}"
    child_fabrics: "{{ MD_Msite.child_fabrics_to_be_associated }}"
    state: present
  when: 
    - MD_Msite.child_fabrics_to_be_associated is defined
    - MD_Msite.child_fabrics_to_be_associated
  # register: managed_child_fabrics

# - name: Set Associated Child Fabric Attribute Data
#   ansible.builtin.set_fact:
#     associated_child_fabric_data: "{{ child_fabric_results.child_fabric_data }}"
#   when: child_fabric_results is defined and child_fabric_results

# - ansible.builtin.debug:
#     var: managed_child_fabrics

# - name: Prepare Multisite Data
#   cisco.nac_dc_vxlan.dtc.prepare_msite:
#     model_data: "{{ MD_Extended }}"
#     associated_child_fabrics: "{{ managed_child_fabrics.associated_child_fabrics }}"
#   when: managed_child_fabrics.associated_child_fabrics is defined and managed_child_fabrics.associated_child_fabrics
#   register: MD_Msite

# - ansible.builtin.debug:
#     var: MD_Msite

# - ansible.builtin.meta: end_play
