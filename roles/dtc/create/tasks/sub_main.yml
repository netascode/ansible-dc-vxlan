# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---

- name: Role Entry Point - [cisco.nac_dc_vxlan.dtc.create]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Calling Role - [cisco.nac_dc_vxlan.dtc.create]           +"
      - "----------------------------------------------------------------"
  tags: "{{ nac_tags.create }}" # Tags defined in roles/common_global/vars/main.yml

- ansible.builtin.debug: msg="Configuring NXOS Devices using NDFC (Direct to Controller)"
  tags: "{{ nac_tags.create }}"

- name: Create NDFC Fabric
  ansible.builtin.import_tasks: fabric.yml
  when: MD_Extended.vxlan.global is defined
  tags: "{{ nac_tags.create_fabric }}"

- name: Manage NDFC Fabric Switches
  ansible.builtin.import_tasks: devices.yml
  when: MD_Extended.vxlan.topology.switches | length > 0
  tags: "{{ nac_tags.create_switches }}"

- name: Manage VPC Peering
  ansible.builtin.import_tasks: vpc_peering.yml
  when: MD_Extended.vxlan.topology.vpc_peers | length > 0
  tags: "{{ nac_tags.create_vpc_peers }}"

- name: Manage NDFC Fabric Interfaces
  ansible.builtin.import_tasks: interfaces.yml
  when: (MD_Extended.vxlan.topology.interfaces.modes.all.count >0) and (MD_Extended.vxlan.topology.switches | length > 0)
  tags: "{{ nac_tags.create_interfaces }}"

- name: Manage NDFC Fabric VRFs and Networks
  ansible.builtin.import_tasks: vrfs_networks.yml
  when: (MD.vxlan.overlay_services is defined) and (MD_Extended.vxlan.topology.switches | length > 0)
  tags: "{{ nac_tags.create_vrfs_networks }}"
