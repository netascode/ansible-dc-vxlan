# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---
- name: Manage Fabric Intra Fabric Links Entry Point
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Manage Fabric Links {{ MD.vxlan.global.name }}"
      - "----------------------------------------------------------------"

- name: Query Links - with Src & Dst Fabric
  cisco.dcnm.dcnm_links:
    state: query # choose from [merged, replaced, deleted, query]
    src_fabric: "{{ MD.vxlan.global.name }}"
    config:
      - dst_fabric: "{{ MD.vxlan.global.name }}" # Destination fabric
  register: result_links

- name: Create empty result List
  ansible.builtin.set_fact:
    not_required_links: []
    required_links: []

- name: Loop through links input to check if they already exist
  ansible.builtin.include_tasks: link_loop.yml
  loop: "{{ fabric_links }}"
  loop_control:
    loop_var: link

- name: remove unwanted links from required links input
  ansible.builtin.set_fact:
    required_links: "{{ fabric_links | difference(not_required_links) }}"
# --------------------------------------------------------------------
# Manage VRF Configuration on NDFC
# --------------------------------------------------------------------
- name: Manage NDFC Fabric Policies
  cisco.dcnm.dcnm_links:
    src_fabric: "{{ MD.vxlan.global.name }}"
    config: "{{ required_links }}"
    deploy: false
    state: merged
  register: manage_fabric_links_result
