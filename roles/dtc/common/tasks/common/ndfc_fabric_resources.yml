# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---
- name: Initialize changes_detected Var
  ansible.builtin.set_fact:
    changes_detected_resource_manager: false
  delegate_to: localhost

- name: Set file_name Var
  ansible.builtin.set_fact:
    file_name: "ndfc_resources.yml"
  delegate_to: localhost

- name: Stat Previous File If It Exists
  ansible.builtin.stat:
    path: "{{ path_name }}{{ file_name }}"
  register: data_file_previous
  delegate_to: localhost

- name: Backup Previous Data File If It Exists
  ansible.builtin.copy:
    src: "{{ path_name }}{{ file_name }}"
    dest: "{{ path_name }}{{ file_name }}.old"
  when: data_file_previous.stat.exists

- name: Delete Previous Data File If It Exists
  ansible.builtin.file:
    state: absent
    path: "{{ path_name }}{{ file_name }}"
  delegate_to: localhost
  when: data_file_previous.stat.exists

# Schema example
#
# ---
# vxlan:
#   topology:
#     resource_manager:
#       underlay_routing_loopback:
#         - switch_name: netascode-bgw3-1
#           ip: 30.0.0.81
#         - switch_name: netascode-leaf3-1
#           ip: 30.0.0.82
#       underlay_vtep_loopback:
#         - switch_name: netascode-bgw3-1
#           ip: 30.1.0.81
#         - switch_name: netascode-leaf3-1
#           ip: 30.1.0.82
#       fabric_links:
#         - switch_name: netascode-bgw3-1
#           subnet: 30.4.0.0/31
#           source_device: netascode-bgw3-1
#           source_interface: Ethernet1/1
#           dest_device: netascode-leaf3-1
#           dest_interface: Ethernet1/1

- name: Build resources List From Template
  ansible.builtin.template:
    src: ndfc_resources.j2
    dest: "{{ path_name }}{{ file_name }}"
  delegate_to: localhost
  when: MD_Extended.vxlan.underlay.general.manual_underlay_allocation is defined and MD_Extended.vxlan.underlay.general.manual_underlay_allocation == True
  vars:
    myvxlan:
      topology:
        resource_manager:
          underlay_routing_loopback:
            - switch_name: netascode-bgw3-1
              ip: 30.0.0.81
            - switch_name: netascode-leaf3-1
              ip: 30.0.0.82
          underlay_vtep_loopback:
            - switch_name: netascode-bgw3-1
              ip: 30.1.0.81
            - switch_name: netascode-leaf3-1
              ip: 30.1.0.82
          fabric_links:
            - switch_name: netascode-bgw3-1
              subnet: 30.4.0.0/31
              source_device: netascode-bgw3-1
              source_interface: Ethernet1/1
              dest_device: netascode-leaf3-1
              dest_interface: Ethernet1/1

- name: Create Empty resource_config Var
  ansible.builtin.set_fact:
    resource_config: []
  delegate_to: localhost

- name: Set inv_config Var
  ansible.builtin.set_fact:
    resource_config: "{{ lookup('file', path_name + file_name) | from_yaml }}"
  when:
    - (MD_Extended.vxlan.topology.switches | default([])) | length > 0
    -  MD_Extended.vxlan.underlay.general.manual_underlay_allocation is defined and MD_Extended.vxlan.underlay.general.manual_underlay_allocation == True
  delegate_to: localhost

- name: Diff Previous and Current Data Files
  cisco.nac_dc_vxlan.dtc.diff_model_changes:
    file_name_previous: "{{ path_name }}{{ file_name }}.old"
    file_name_current: "{{ path_name }}{{ file_name }}"
  register: file_diff_result
  delegate_to: localhost

- name: Set File Change Flag Based on File Diff Result
  ansible.builtin.set_fact:
    changes_detected_resource_manager: true
  delegate_to: localhost
  when:
    - file_diff_result.file_data_changed
    - check_roles['save_previous']