---
# This NDFC fabric config data structure is auto-generated
# DO NOT EDIT MANUALLY
#
{% set vxlan = MD_Extended.vxlan %}
{% set global = vxlan.global %}
{% set underlay = vxlan.underlay | default({}) %}
{# ------------------------------------------------------ #}
{# Global Parameters                                      #}
{# ------------------------------------------------------ #}
- FABRIC_NAME: {{ global.name }}
  BGP_AS: {{ global.bgp_asn }}
  FABRIC_TYPE: VXLAN_EVPN
  OVERLAY_MODE: cli
  DEPLOY: True
  GRFIELD_DEBUG_FLAG: Enable
  AAA_REMOTE_IP_ENABLED: False
  ENABLE_FABRIC_VPC_DOMAIN_ID: False
  RR_COUNT: {{ global.route_reflectors | default(defaults.vxlan.global.route_reflectors) }}
  ANYCAST_GW_MAC: {{ global.anycast_gateway_mac | default(defaults.vxlan.global.anycast_gateway_mac) }}
{# ------------------------------------------------------ #}
{# Manageability Parameters                               #}
{# ------------------------------------------------------ #}
{% if global.dns_servers is defined and global.dns_servers %}
{% set dns_server_ips = [] %}
{% set dns_server_vrfs = [] %}
{% for dns in global.dns_servers %}
{% if dns.ip_address | string is defined and dns.ip_address %}
{% set dns_ip = dns.ip_address | string %}
{% set dns_server_ips = dns_server_ips.append(dns_ip) %}
{% endif %}
{% if dns.vrf | string is defined and dns.vrf %}
{% set dns_vrf = dns.vrf  | string %}
{% set dns_server_vrfs = dns_server_vrfs.append(dns_vrf) %}
{% endif %}
{% endfor %}
  DNS_SERVER_IP_LIST: {{ dns_server_ips | join(',') | default(omit) }}
  DNS_SERVER_VRF: {{ dns_server_vrfs | join(',') | default(omit) }}
{% endif %}
{% if global.ntp_servers is defined and global.ntp_servers %}
{% set ntp_server_ips = [] %}
{% set ntp_server_vrfs = [] %}
{% for ntp in global.ntp_servers %}
{% if ntp.ip_address is defined and ntp.ip_address %}
{% set ntp_ip = ntp.ip_address | string %}
{% set ntp_server_ips = ntp_server_ips.append(ntp_ip) %}
{% endif %}
{% if ntp.vrf is defined and ntp.vrf %}
{% set ntp_vrf = ntp.vrf|string %}
{% set ntp_server_vrfs = ntp_server_vrfs.append(ntp_vrf) %}
{% endif %}
{% endfor %}
  NTP_SERVER_IP_LIST: {{ ntp_server_ips | join(',') | default(omit) }}
  NTP_SERVER_VRF: {{ ntp_server_vrfs | join(',') | default(omit) }}
{% endif %}
{% if global.syslog_servers is defined and global.syslog_servers %}
{% set syslog_server_ips = [] %}
{% set syslog_server_vrfs = [] %}
{% set syslog_server_sevs = [] %}
{% for syslog_server in global.syslog_servers %}
{% if syslog_server.ip_address is defined and syslog_server.ip_address %}
{% set syslog_server_ip = syslog_server.ip_address | string %}
{% set syslog_server_ips = syslog_server_ips.append(syslog_server_ip) %}
{% endif %}
{% if syslog_server.vrf is defined and syslog_server.vrf %}
{% set syslog_server_vrf = syslog_server.vrf | string %}
{% set syslog_server_vrfs = syslog_server_vrfs.append(syslog_server_vrf) %}
{% endif %}
{% if syslog_server.severity is defined and syslog_server.severity %}
{% set syslog_server_sev = syslog_server.severity %}
{% set syslog_server_sevs = syslog_server_sevs.append(syslog_server_sev) %}
{% endif %}
{% endfor %}
  SYSLOG_SERVER_IP_LIST: {{ syslog_server_ips | join(',') | default(omit) }}
{% if syslog_server_ips is defined and syslog_server_ips %}
  SYSLOG_SERVER_VRF: {{ syslog_server_vrfs | join(',') | default(omit) }}
  SYSLOG_SEV: {{ syslog_server_sevs | join(',') | default(omit) }}
{% endif %}
{% endif %}
{# ------------------------------------------------------ #}
{# vPC Parameters                                         #}
{# ------------------------------------------------------ #}
  VPC_PEER_LINK_VLAN: {{ vxlan.global.vpc.peer_link_vlan | default(defaults.vxlan.global.vpc.peer_link_vlan) }}
  VPC_PEER_KEEP_ALIVE_OPTION: {{ vxlan.global.vpc.peer_keep_alive | default(defaults.vxlan.global.vpc.peer_keep_alive) }}
  VPC_AUTO_RECOVERY_TIME: {{ vxlan.global.vpc.auto_recovery_time | default(defaults.vxlan.global.vpc.auto_recovery_time) }}
  VPC_DELAY_RESTORE_TIME: {{ vxlan.global.vpc.delay_restore_time | default(defaults.vxlan.global.vpc.delay_restore_time) }}
  VPC_PEER_LINK_PO: {{ vxlan.global.vpc.peer_link_port_channel_id | default(defaults.vxlan.global.vpc.peer_link_port_channel_id) }}
  VPC_DOMAIN_ID_RANGE: {{ vxlan.global.vpc.domain_id_range | default(defaults.vxlan.global.vpc.domain_id_range) }}
  VPC_DELAY_RESTORE: {{ vxlan.global.vpc.delay_restore_time | default(defaults.vxlan.global.vpc.delay_restore_time) }}
  ADVERTISE_PIP_BGP: {{ (vxlan.global.vpc.advertise_pip | default(defaults.vxlan.global.vpc.advertise_pip) | title) }}
{% if (vxlan.global.vpc.advertise_pip | default(defaults.vxlan.global.vpc.advertise_pip) | title) == 'False' %}
  ADVERTISE_PIP_ON_BORDER: {{ vxlan.global.vpc.advertise_pip_border_only | default(defaults.vxlan.global.vpc.advertise_pip_border_only) }}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay General Parameters                            #}
{# ------------------------------------------------------ #}
  BGP_LB_ID: {{ underlay.general.underlay_routing_loopback_id | default(defaults.vxlan.underlay.general.underlay_routing_loopback_id) }}
  NVE_LB_ID: {{ underlay.general.underlay_vtep_loopback_id | default(defaults.vxlan.underlay.general.underlay_vtep_loopback_id) }}
  FABRIC_MTU: {{ underlay.general.intra_fabric_interface_mtu | default(defaults.vxlan.underlay.general.intra_fabric_interface_mtu) }}
  L2_HOST_INTF_MTU: {{ underlay.general.layer2_host_interfacde_mtu | default(defaults.vxlan.underlay.general.layer2_host_interfacde_mtu) }}
  HOST_INTF_ADMIN_STATE: {{ underlay.general.unshut_host_interfaces | default(defaults.vxlan.underlay.general.unshut_host_interfaces) }}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'False' %}
  FABRIC_INTERFACE_TYPE: {{ underlay.general.fabric_interface_numbering | default(defaults.vxlan.underlay.general.fabric_interface_numbering) }}
  SUBNET_TARGET_MASK: {{ underlay.general.subnet_mask | default(defaults.vxlan.underlay.general.subnet_mask) }}
  REPLICATION_MODE: {{ underlay.general.replication_mode | default(defaults.vxlan.underlay.general.replication_mode) | title }}
{% endif %}
  LINK_STATE_ROUTING: {{ underlay.general.routing_protocol | default(defaults.vxlan.underlay.general.routing_protocol) }}
  LINK_STATE_ROUTING_TAG: {{ underlay.general.underlay_routing_protocol_tag | default(defaults.vxlan.underlay.general.underlay_routing_protocol_tag) }}
  UNDERLAY_IS_V6: {{ (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) }}
  STATIC_UNDERLAY_IP_ALLOC: {{ (underlay.general.manual_underlay_allocation | default(defaults.vxlan.underlay.general.manual_underlay_allocation) | title)}}
{# ------------------------------------------------------ #}
{# Underlay Multicast Parameters                          #}
{# ------------------------------------------------------ #}
{% if (underlay.general.replication_mode | default(defaults.vxlan.underlay.general.replication_mode) | title) == 'Multicast' %}
  MULTICAST_GROUP_SUBNET: {{ underlay.multicast.group_subnet | default(defaults.vxlan.underlay.multicast.group_subnet) }}
  RP_COUNT: {{ underlay.multicast.rendezvous_points | default(defaults.vxlan.underlay.multicast.rendezvous_points) }}
  RP_MODE: {{ underlay.multicast.rp_mode | default(defaults.vxlan.underlay.multicast.rp_mode) }}
  RP_LB_ID: {{ underlay.multicast.underlay_rp_loopback_id | default(defaults.vxlan.underlay.multicast.underlay_rp_loopback_id) }}
  ENABLE_TRM: {{(underlay.multicast.trm_enable | default(defaults.vxlan.underlay.multicast.trm_enable) | title) }}
{% if (underlay.multicast.trm_enable | default(defaults.vxlan.underlay.multicast.trm_enable) | title) == 'True' %}
  L3VNI_MCAST_GROUP: {{ underlay.multicast.trm_default_group | default(defaults.vxlan.underlay.multicast.trm_default_group) }}
{% endif %}
{% if underlay.multicast.rp_mode | default(defaults.vxlan.underlay.multicast.rp_mode) == 'bidir' %}
  PHANTOM_RP_LB_ID1: {{ underlay.multicast.underlay_primary_rp_loopback_id | default(defaults.vxlan.underlay.multicast.underlay_primary_rp_loopback_id) }}
  PHANTOM_RP_LB_ID2: {{ underlay.multicast.underlay_backup_rp_loopback_id | default(defaults.vxlan.underlay.multicast.underlay_backup_rp_loopback_id) }}
{% if underlay.multicast.rendezvous_points | default(defaults.vxlan.underlay.multicast.rendezvous_points) == 4 %}
  PHANTOM_RP_LB_ID3: {{ underlay.multicast.underlay_second_backup_rp_loopback_id | default(defaults.vxlan.underlay.multicast.underlay_second_backup_rp_loopback_id) }}
  PHANTOM_RP_LB_ID4: {{ underlay.multicast.underlay_third_backup_rp_loopback_id | default(defaults.vxlan.underlay.multicast.underlay_third_backup_rp_loopback_id) }}
{% endif %}
{% endif %}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay ISIS Parameters                               #}
{# ------------------------------------------------------ #}
{% if (underlay.general.routing_protocol | default(defaults.vxlan.underlay.general.routing_protocol)) == 'is-is' %}
  ISIS_LEVEL: {{ underlay.isis.level | default(defaults.vxlan.underlay.isis.level) }}
  ISIS_AUTH_ENABLE: {{ (underlay.isis.authentication_enable | default(defaults.vxlan.underlay.isis.authentication_enable) | title) }}
{% if (underlay.isis.authentication_enable | default(defaults.vxlan.underlay.isis.authentication_enable) | title) == 'True' %}
  ISIS_AUTH_KEYCHAIN_NAME: {{ underlay.isis.authentication_keychain_name | default(omit) }}
  ISIS_AUTH_KEYCHAIN_KEY_ID: {{ underlay.isis.authentication_key_id | default(defaults.vxlan.underlay.isis.authentication_key_id) }}
{% endif %}
  ISIS_OVERLOAD_ENABLE: {{ underlay.isis.overload_bit | default(defaults.vxlan.underlay.isis.overload_bit) }}
{% if (underlay.isis.overload_bit | default(defaults.vxlan.underlay.isis.overload_bit) | title) == 'True' %}
  ISIS_OVERLOAD_ELAPSE_TIME: {{ underlay.isis.overload_bit_elapsed_time | default(defaults.vxlan.underlay.isis.overload_bit_elapsed_time) }}
{% endif %}
  ISIS_P2P_ENABLE: {{ underlay.isis.network_point_to_point | default(defaults.vxlan.underlay.isis.network_point_to_point) }}
{% if (underlay.bfd.enable | default(defaults.vxlan.underlay.bfd.enable) | title) == 'True' %}
  BFD_ISIS_ENABLE: {{ underlay.bfd.isis | default(defaults.vxlan.underlay.bfd.isis) }}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay OSPF Parameters                               #}
{# ------------------------------------------------------ #}
{% elif (underlay.general.routing_protocol | default(defaults.vxlan.underlay.general.routing_protocol)) == 'ospf' %}
  OSPF_AREA_ID: {{ underlay.ospf.area_id | default(defaults.vxlan.underlay.ospf.area_id) }}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'False' %}
  OSPF_AUTH_ENABLE: {{ (underlay.ospf.authentication_enable | default(defaults.vxlan.underlay.ospf.authentication_enable) | title) }}
{% endif %}
{% if (underlay.ospf.authentication_enable | default(defaults.vxlan.underlay.ospf.authentication_enable) | title) == 'True' %}
  OSPF_AUTH_KEY_ID: {{ underlay.ospf.authentication_key_id | default(defaults.vxlan.underlay.ospf.authentication_key_id) }}
  OSPF_AUTH_KEY: {{ underlay.ospf.authentication_key | default(omit) }}
{% endif %}
{% if (underlay.bfd.enable | default(defaults.vxlan.underlay.bfd.enable) | title) == 'True' %}
  BFD_OSPF_ENABLE: {{ underlay.bfd.ospf | default(defaults.vxlan.underlay.bfd.ospf) }}
{% endif %}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay IPv4 Parameters                               #}
{# ------------------------------------------------------ #}
{% if (underlay.general.manual_underlay_allocation | default(defaults.vxlan.underlay.general.manual_underlay_allocation) | title) == 'False' %}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'False' %}
  LOOPBACK0_IP_RANGE: {{ underlay.ipv4.underlay_routing_loopback_ip_range | default(defaults.vxlan.underlay.ipv4.underlay_routing_loopback_ip_range) }}
  LOOPBACK1_IP_RANGE: {{ underlay.ipv4.underlay_vtep_loopback_ip_range | default(defaults.vxlan.underlay.ipv4.underlay_vtep_loopback_ip_range) }}
  SUBNET_RANGE: {{ underlay.ipv4.underlay_subnet_ip_range | default(defaults.vxlan.underlay.ipv4.underlay_subnet_ip_range) }}
{% endif %}
  ANYCAST_RP_IP_RANGE: {{ underlay.ipv4.underlay_rp_loopback_ip_range | default(defaults.vxlan.underlay.ipv4.underlay_rp_loopback_ip_range) }}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay IPv6 Parameters                               #}
{# ------------------------------------------------------ #}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'True' %}
  USE_LINK_LOCAL: {{ underlay.ipv6.enable_ipv6_link_local_address | default(defaults.vxlan.underlay.ipv6.enable_ipv6_link_local_address | title) }}
{% if (underlay.ipv6.enable_ipv6_link_local_address | default(defaults.vxlan.underlay.ipv6.enable_ipv6_link_local_address) | title) == 'False' %}
  V6_SUBNET_TARGET_MASK: {{ underlay.ipv6.underlay_subnet_mask | default(defaults.vxlan.underlay.ipv6.underlay_subnet_mask) }}
{% endif %}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay BGP Parameters                                #}
{# ------------------------------------------------------ #}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'False' %}
  BGP_AUTH_ENABLE: {{ (underlay.bgp.authentication_enable | default(defaults.vxlan.underlay.bgp.authentication_enable) | title)}}
{% endif %}
{% if (underlay.bgp.authentication_enable | default(defaults.vxlan.underlay.bgp.authentication_enable) | title) == 'True' %}
  BGP_AUTH_KEY_TYPE: {{ underlay.bgp.authentication_key_type | default(defaults.vxlan.underlay.bgp.authentication_key_type) }}
  BGP_AUTH_KEY: {{ underlay.bgp.authentication_key | default(omit) }}
{% endif %}
{# ------------------------------------------------------ #}
{# Underlay BFD Parameters                                #}
{# ------------------------------------------------------ #}
{% if (underlay.general.enable_ipv6_underlay | default(defaults.vxlan.underlay.general.enable_ipv6_underlay) | title) == 'False' %}
  BFD_ENABLE: {{ underlay.bfd.enable | default(defaults.vxlan.underlay.bfd.enable) }}
{% endif %}
{% if (underlay.bfd.enable | default(defaults.vxlan.underlay.bfd.enable) | title) == 'True' %}
  BFD_IBGP_ENABLE: {{ underlay.bfd.ibgp | default(defaults.vxlan.underlay.bfd.ibgp) }}
  BFD_PIM_ENABLE: {{ underlay.bfd.pim | default(defaults.vxlan.underlay.bfd.pim) }}
  BFD_AUTH_ENABLE: {{ (underlay.bfd.authentication_enable | default(defaults.vxlan.underlay.bfd.authentication_enable) | title)}}
{% if (underlay.bfd.authentication_enable | default(defaults.vxlan.underlay.bfd.authentication_enable) | title) == 'True' %}
  BFD_AUTH_KEY: {{ underlay.bfd.authentication_key | default(omit) }}
  BFD_AUTH_KEY_ID: {{ underlay.bfd.authentication_key_id | default(defaults.vxlan.underlay.bfd.authentication_key_id) }}
{% endif %}
{% endif %}
{# ------------------------------------------------------ #}
{# Flow Monitor Parameters                                #}
{# ------------------------------------------------------ #}
  ENABLE_NETFLOW: {{ global.netflow.enable | default(defaults.vxlan.global.netflow.enable) }}
{% if global.netflow.enable is defined and global.netflow.enable | bool or defaults.vxlan.global.netflow.enable | bool %}
{% if global.netflow.exporter is defined %}
{% set exporter_dict = dict() %}
{% set _ = exporter_dict.update({ "NETFLOW_EXPORTER_LIST":[] }) %}
{% for e in global.netflow.exporter %}
{% set _ = exporter_dict["NETFLOW_EXPORTER_LIST"].append(dict(EXPORTER_NAME=e.name,IP=e.ip_address,VRF=e.vrf | default(""), SRC_IF_NAME=e.source_interface,UDP_PORT=e.udp_port)) %}
{% endfor %}
  NETFLOW_EXPORTER_LIST: "{{ exporter_dict | tojson | replace('"', '\\"') }}"
{% endif %}
{% if global.netflow.record is defined %}
{% set record_dict = dict() %}
{% set _ = record_dict.update({ "NETFLOW_RECORD_LIST":[] }) %}
{% for r in global.netflow.record %}
{% set _ = record_dict["NETFLOW_RECORD_LIST"].append(dict(RECORD_NAME=r.name,RECORD_TEMPLATE =r.template,LAYER2_RECORD=r.layer2 | default(false) | string | lower)) %}
{% endfor %}
  NETFLOW_RECORD_LIST: "{{ record_dict | tojson | replace('"', '\\"') }}"
{% endif %}
{% if global.netflow.monitor is defined %}
{% set monitor_dict = dict() %}
{% set _ = monitor_dict.update({ "NETFLOW_MONITOR_LIST":[] }) %}
{% for m in global.netflow.monitor %}
{% set _ = monitor_dict["NETFLOW_MONITOR_LIST"].append(dict(MONITOR_NAME=m.name,RECORD_NAME=m.record,EXPORTER1=m.exporter1,EXPORTER2=m.exporter2 | default(""))) %}
{% endfor %}
  NETFLOW_MONITOR_LIST: "{{ monitor_dict | tojson | replace('"', '\\"') }}"
{% endif %}
{% endif %}
