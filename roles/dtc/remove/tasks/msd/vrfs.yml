# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
---

- ansible.builtin.debug: msg="Removing Unmanaged Fabric VRFs. This could take several minutes..."
  when:
    - (multisite_vrf_delete_mode is defined) and (multisite_vrf_delete_mode is true|bool)

- name: Run dtc.common.tasks.msd.ndfc_vrfs.yml
  ansible.builtin.import_tasks: "{{ role_path }}/../common/tasks/msd/ndfc_vrfs.yml"

# --------------------------------------------------------------------
# Update Local Variables To NameSpace Dict For Use Elsewhere
# --------------------------------------------------------------------
- name: Update Local Variables With Namespace Context
  ansible.builtin.set_fact:
    vars_common_msd: "{{ vars_common_msd | ansible.builtin.combine(update_data) }}"
  vars:
    update_data:
        changes_detected_vrfs: "{{ changes_detected_vrfs if vars_common_msd.changes_detected_vrfs is not defined else vars_common_msd.changes_detected_vrfs }}"
        vrf_config: "{{ vrf_config }}"

- name: Run Diff Flags
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     VRFs Changes Detected -                 [ {{ vars_common_msd.changes_detected_vrfs }} ]"
      - "+     ----- Run Map -----"
      - "+     Run Map Diff Run -                      [ {{ run_map_read_result.diff_run }} ]"
      - "+     Force Run Flag  -                       [ {{ force_run_all }} ]"
      - "----------------------------------------------------------------"

# - name: Remove Unmanaged Fabric VRFs
#   cisco.dcnm.dcnm_vrf:
#     fabric: "{{ MD_Extended.vxlan.fabric.name }}"
#     config: "{{ vars_common_msd.vrf_config }}"
#     state: overridden
#   vars:
#       ansible_command_timeout: 3000
#       ansible_connect_timeout: 3000
#   when:
#    - multisite_vrf_delete_mode is defined
#    - multisite_vrf_delete_mode is true | bool
#    - vars_common_msd.changes_detected_vrfs

- name: Remove Unmanaged Fabric VRFs
  cisco.nac_dc_vxlan.dtc.manage_child_fabric_vrfs:
    fabric: "{{ MD_Extended.vxlan.fabric.name }}"
    msite_data: "{{ MD_Multisite}}"
    state: absent
  register: child_fabric_vrf_results
  when:
    - multisite_vrf_delete_mode is defined
    - multisite_vrf_delete_mode is true | bool
    - vars_common_msd.changes_detected_vrfs

- ansible.builtin.debug:
    msg:
      - "------------------------------------------------------------------------------------------------------------------"
      - "+ SKIPPING Remove Unmanaged MultiSite Fabric VRFs task because multisite_vrf_delete_mode flag is set to False    +"
      - "------------------------------------------------------------------------------------------------------------------"
  when: not ((multisite_vrf_delete_mode is defined) and (multisite_vrf_delete_mode is true|bool))
