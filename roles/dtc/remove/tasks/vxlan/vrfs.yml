# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
---

- name: Check If Current Fabric Is An Active Multisite Fabric
  block:
    - name: Get Multisite Fabric Associations
      cisco.dcnm.dcnm_rest:
        method: GET
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/msd/fabric-associations
      register: ndfc_msd_fabric_associations

    - name: Find Current Fabric by Name In Multisite Associations
      ansible.builtin.set_fact:
        selected_fabric: "{{ ndfc_msd_fabric_associations['response']['DATA'] | json_query(query) }}"
      vars:
        query: "[?fabricName=='{{ MD_Extended.vxlan.fabric.name }}']"

    - name: Set Multisite Check for Current Fabric
      ansible.builtin.set_fact:
        is_active_child_fabric: "{{ true if selected_fabric[0]['fabricParent'] != 'None' else false }}"
  when: is_active_child_fabric is not defined

- name: Fail If Current Fabric is Part of Multisite And Attempting to Manage VRFs
  ansible.builtin.fail:
    msg: VRFs cannot be managed from the current fabric {{  MD_Extended.vxlan.fabric.name }} as it is a child fabric part of a Multisite fabric.
  when:
    - is_active_child_fabric
    - vars_common_vxlan.vrf_config | length > 0

- ansible.builtin.debug: msg="Removing Unmanaged Fabric VRFs. This could take several minutes..."
  when:
    - switch_list.response.DATA | length > 0
    - (vrf_delete_mode is defined) and (vrf_delete_mode is true|bool)
    - not is_active_child_fabric

- name: Remove Unmanaged Fabric VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ MD_Extended.vxlan.fabric.name }}"
    state: overridden
    config: "{{ vars_common_vxlan.vrf_config }}"
  vars:
      ansible_command_timeout: 3000
      ansible_connect_timeout: 3000
  when:
    - switch_list.response.DATA | length > 0
    - (vrf_delete_mode is defined) and (vrf_delete_mode is true|bool)
    - not is_active_child_fabric

- ansible.builtin.debug:
    msg:
      - "--------------------------------------------------------------------------------------------------------"
      - "+ SKIPPING Remove Unmanaged Fabric VRFs task because vrf_delete_mode flag is set to False   +"
      - "--------------------------------------------------------------------------------------------------------"
  when: not ((vrf_delete_mode is defined) and (vrf_delete_mode is true|bool)) or is_active_child_fabric
