# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT
---

- ansible.builtin.debug: msg="Removing Unmanaged Fabric Networks. This could take several minutes..."
  when:
    - switch_list.response.DATA | length > 0
    - (network_delete_mode is defined) and (network_delete_mode is true|bool)

- name: Get network list
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "/appcenter/cisco/ndfc/api/v1/onemanage/top-down/fabrics/{{ MD.vxlan.global.name }}/networks"
  register: networkList

- name: Get network attachments list
  cisco.dcnm.dcnm_rest:
      method: GET
      path: /appcenter/cisco/ndfc/api/v1/onemanage/top-down/fabrics/{{ MD.vxlan.global.name }}/networks/attachments
  register: networkAttachmentList

- name: Filter network attachments to be removed
  cisco.nac_dc_vxlan.dtc.fed_overlay_check:
    model_data: "{{ MD_Extended }}"
    ndfc_data: "{{ networkList.response.DATA }}"
    ndfc_attachment_data: "{{ networkAttachmentList.response.DATA }}"
    check_type: "network"
  register: not_required_networks

- name: Remove network attachments
  cisco.dcnm.dcnm_rest:
      method: POST
      path: /appcenter/cisco/ndfc/api/v1/onemanage/top-down/fabrics/{{ MD.vxlan.global.name }}/networks/attachments
      json_data: "{{ not_required_networks.attachments_payload | to_json }}"
  register: network_attachment_result
  when:
    - switch_list.response.DATA | length > 0
    - not_required_networks.attachments_payload | length > 0
    - (network_delete_mode is defined) and (network_delete_mode is true|bool)

- name: Config-Save for Fabric {{ MD.vxlan.global.name }}
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "/appcenter/cisco/ndfc/api/v1/onemanage/fabrics/{{ MD.vxlan.global.name }}/config-save"
  register: config_save
  ignore_errors: True

- name: Deploy for network attachments removal
  cisco.dcnm.dcnm_rest:
      method: POST
      path: /appcenter/cisco/ndfc/api/v1/onemanage/fabrics/{{ MD.vxlan.global.name }}/config-deploy/{{not_required_network_attachments.deploy_payload | join(',') }}?forceShowRun=false
  when:
    - switch_list.response.DATA | length > 0
    - not_required_networks.deploy_payload | length > 0
    - (network_delete_mode is defined) and (network_delete_mode is true|bool)

- name: Remove networks
  cisco.dcnm.dcnm_rest:
      method: DELETE
      path: /appcenter/cisco/ndfc/api/v1/onemanage/top-down/fabrics/{{ MD.vxlan.global.name }}/bulk-delete/networks?network-names={{ not_required_networks.payload | join(',') }}
  register: network_attachment_result
  when:
    - switch_list.response.DATA | length > 0
    - not_required_networks.payload | length > 0
    - (network_delete_mode is defined) and (network_delete_mode is true|bool)

- ansible.builtin.debug:
    msg:
      - "---------------------------------------------------------------------------------------------------------------"
      - "+ SKIPPING Remove Unmanaged Fabric Networks task because network_delete_mode flag is set to False  +"
      - "---------------------------------------------------------------------------------------------------------------"
  when: not ((network_delete_mode is defined) and (network_delete_mode is true|bool))
