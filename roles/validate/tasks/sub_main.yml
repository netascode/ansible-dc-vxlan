# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---

- name: Perform Required Syntax and Semantic Model Validation
  cisco.nac_dc_vxlan.common.nac_dc_validate:
    schema: "{{ schema_path }}"
    mdata: "{{ data_path }}"
    rules: "{{ rules_path }}"
  register: model_data_vxlan
  vars:
    data_path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
    rules_path: "{{ role_path }}/files/rules/required_rules/"
  delegate_to: localhost

- name: Prepare Service Model
  cisco.nac_dc_vxlan.common.prepare_service_model:
    inventory_hostname: "{{ inventory_hostname }}"
    hostvars: "{{ hostvars }}"
    model_data: "{{ model_data_vxlan['data'] }}"
    default_values: "{{ defaults }}"
    templates_path: "{{ role_path }}/../dtc/common/templates/"
  register: smd
  delegate_to: localhost

- name: Store Golden Service Model Data
  ansible.builtin.set_fact:
    MD: "{{ smd['model_golden'] }}"
  delegate_to: localhost

- name: Store Extended Service Model Data
  ansible.builtin.set_fact:
    MD_Extended: "{{ smd['model_extended'] }}"
  delegate_to: localhost

- name: Check Roles
  cisco.nac_dc_vxlan.common.check_roles:
    role_list: "{{ role_names }}"
  register: check_roles
  delegate_to: localhost

- name: Read Run Map From Previous Run
  cisco.nac_dc_vxlan.common.read_run_map:
    model_data: "{{ MD_Extended }}"
  register: run_map_read_result
  delegate_to: localhost

- name: Debug Run Map Read Result
  ansible.builtin.debug:
    msg: "{{ run_map_read_result }}"
  delegate_to: localhost

- name: Initialize Run Map
  cisco.nac_dc_vxlan.common.run_map:
    model_data: "{{ MD_Extended }}"
    stage: starting_execution
  register: run_map
  delegate_to: localhost

- name: Manage Previous Service Model Data Files
  ansible.builtin.include_tasks: manage_model_files_previous.yml
  when: check_roles['save_previous']

- name: Manage Current Service Model Data Files
  ansible.builtin.include_tasks: manage_model_files_current.yml
  when: check_roles['save_previous']