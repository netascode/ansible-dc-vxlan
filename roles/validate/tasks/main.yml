---

- name: Role Entry Point - [cisco.nac_dc_vxlan.validate]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Calling Role - [cisco.nac_dc_vxlan.validate]             +"
      - "----------------------------------------------------------------"

- debug: msg="Role Path - {{ role_path }}"
- debug: msg="Inventory Directory - {{ inventory_dir }}"

- name: Validate NDFC Service Model Data
  vars:
    schema_path: "{{ role_path }}/files/fabric_schema.yaml"
    data_path: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}"
    rules_path: "{{ role_path }}/files/rules/"

  block:
    - debug: msg="Calling Role Validate - nac_dc_vxlan.validate"

    - meta: reset_connection

    - debug: msg="Workflow is Direct to Device (DTD)"
      when: hostvars[inventory_hostname]['ansible_network_os'] == "cisco.nxos.nxos"

    - debug: msg="Workflow is Direct to Controller (DTC)"
      when: hostvars[inventory_hostname]['ansible_network_os'] == "cisco.dcnm.dcnm"

    - name: "Perform Syntax and Semantic Model Validation"
      cisco.nac_dc_vxlan.common.nac_dc_validate:
        schema: "{{ schema_path }}"
        mdata: "{{ data_path }}"
        rules: "{{ rules_path }}"
      register: model_data

    - name: "Prepare Service Model"
      cisco.nac_dc_vxlan.common.prepare_service_model:
        inventory_hostname: "{{ inventory_hostname }}"
        hostvars: "{{ hostvars }}"
        model_data: "{{ model_data['data'] }}"
      register: smd

    - name: Store Golden Service Model Data
      ansible.builtin.set_fact:
        MD: "{{ smd['model_golden'] }}"

    - name: Store Extended Service Model Data
      ansible.builtin.set_fact:
        MD_Extended: "{{ smd['model_extended'] }}"

    - name: "Check Roles"
      cisco.nac_dc_vxlan.common.check_roles:
        role_list: "{{ role_names }}"
      register: check_roles

    - name: Manage Previous Service Model Data Files
      ansible.builtin.include_tasks: manage_model_files_previous.yml
      when: check_roles['save_previous']

    - name: Manage Current Service Model Data Files
      ansible.builtin.include_tasks: manage_model_files_current.yml
      when: check_roles['save_previous']

    - name: Stat Host Specific Defaults
      ansible.builtin.stat: path="{{ role_path }}/defaults/{{ inventory_hostname }}/defaults.yml"
      register: host_defaults

    - name: Include Host Specific Defaults if Available
      ansible.builtin.include_vars:
        file: "{{ role_path }}/defaults/{{ inventory_hostname }}/defaults.yml"
      when: host_defaults.stat.exists
