# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---
- debug: msg="Executing Integration Test for VXLAN {{ playbook_dir }}"

- name: Check if fabric_vrs.yml file exists
  ansible.builtin.stat: path="{{ playbook_dir }}/fabric_vars.yml"
  register: fabric_vars_stat

- name: Fail if fabric_vars.yml file does not exist
  ansible.builtin.fail:
    msg: "File ({{ playbook_dir }}/fabric_vars.yml does not exist). Please create the file and try again."
  when: not fabric_vars_stat.stat.exists

- name: Import Vars From fabric_vars.yml
  ansible.builtin.include_vars:
    file: "{{ playbook_dir }}/fabric_vars.yml"
  delegate_to: 127.0.0.1

- name: List out files in directory
  ansible.builtin.find:
    paths: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}"
  register: file_information
  delegate_to: 127.0.0.1

- name: Get only file names without path information
  ansible.builtin.set_fact:
    files_names: "{{ file_information['files'] | map(attribute='path') | map('regex_replace','^.*/(.*)$','\\1') | list }}"
  delegate_to: 127.0.0.1

- name: print file names without path
  debug:
    msg: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace Ansible Password in Group Vars ndfc_device_password
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/group_vars/ndfc/main.yml"
    regexp: 'ansible_password\:\s+(\S+)'
    replace: "ansible_password: {{ fabric_password }}"
  delegate_to: 127.0.0.1

- name: Replace ndfc_device_password Password in Group Vars
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/group_vars/ndfc/main.yml"
    regexp: 'ndfc_device_password\:\s+(\S+)'
    replace: "ndfc_device_password: {{ fabric_device_password }}"
  delegate_to: 127.0.0.1

- name: Replace << fabric_name >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< fabric_name >>'
    replace: "{{ fabric_name }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << default_gateway_v4 >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< default_gateway_v4 >>'
    replace: "{{ default_gateway_v4 }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Spine 1 --
- name: Replace << spine1_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine1_hostname >>'
    replace: "{{ spine1.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << spine1_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine1_serial >>'
    replace: "{{ spine1.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << spine1_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine1_ip >>'
    replace: "{{ spine1.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Spine 2 --
- name: Replace << spine2_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine2_hostname >>'
    replace: "{{ spine2.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << spine2_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine2_serial >>'
    replace: "{{ spine2.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << spine2_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< spine2_ip >>'
    replace: "{{ spine2.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Leaf 1 --
- name: Replace << leaf1_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf1_hostname >>'
    replace: "{{ leaf1.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf1_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf1_serial >>'
    replace: "{{ leaf1.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf1_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf1_ip >>'
    replace: "{{ leaf1.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Leaf 2 --
- name: Replace << leaf2_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf2_hostname >>'
    replace: "{{ leaf2.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf2_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf2_serial >>'
    replace: "{{ leaf2.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf2_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf2_ip >>'
    replace: "{{ leaf2.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Leaf 3 --
- name: Replace << leaf3_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf3_hostname >>'
    replace: "{{ leaf3.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf3_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf3_serial >>'
    replace: "{{ leaf3.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf3_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf3_ip >>'
    replace: "{{ leaf3.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Leaf 4 --
- name: Replace << leaf4_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf4_hostname >>'
    replace: "{{ leaf4.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf4_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf4_serial >>'
    replace: "{{ leaf4.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << leaf4_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< leaf4_ip >>'
    replace: "{{ leaf4.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Border --
- name: Replace << border_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_hostname >>'
    replace: "{{ border.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_serial >>'
    replace: "{{ border.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_ip >>'
    replace: "{{ border.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Border Gateway --
- name: Replace << border_gateway_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_gateway_hostname >>'
    replace: "{{ border_gateway.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_gateway_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_gateway_serial >>'
    replace: "{{ border_gateway.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_gateway_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_gateway_ip >>'
    replace: "{{ border_gateway.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

# -- Border Spine --
- name: Replace << border_spine_hostname >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_spine_hostname >>'
    replace: "{{ border_spine.hostname }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_spine_serial >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_spine_serial >>'
    replace: "{{ border_spine.serial }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1

- name: Replace << border_spine_ip >> in test data model files
  ansible.builtin.replace:
    path: "{{ playbook_dir }}/host_vars/{{ inventory_hostname}}/{{ item}}"
    regexp: '<< border_spine_ip >>'
    replace: "{{ border_spine.ip }}"
  loop: "{{ files_names }}"
  delegate_to: 127.0.0.1